name: coverity-scan

# Controls when the action will run.
on:
  # Run this action on a schedule (we're allowed a maximum of two per day)
  schedule:
    - cron: '0 18 * * SUN' # Sunday at 18:00 UTC

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-24.04
    container:
      image: fedora:41
      options: --security-opt seccomp=unconfined
      volumes:
        - ${{ github.workspace }}:/w
    if: github.repository == 'nyalldawson/QGIS'
    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          large-packages: false
          docker-images: false
          swap-storage: true
          
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          sudo dnf -y update
          sudo dnf5 install -y --setopt=install_weak_deps=False proj-devel
          sudo dnf -y install qt5-qtbase-private-devel qt5-qtwebkit-devel qt5-qtlocation-devel qt5-qtmultimedia-devel qt5-qttools-static qca-qt5-devel qca-qt5-ossl qt5-qt3d-devel python3-qt5-devel python3-qscintilla-qt5-devel qscintilla-qt5-devel python3-qscintilla-qt5 clang flex bison geos-devel gdal  gdal-devel hdf5-devel sqlite-devel libspatialite-devel qt5-qtsvg-devel spatialindex-devel expat-devel netcdf-devel qwt-qt5-devel gsl-devel PDAL PDAL-devel postgresql-devel cmake python3-gdal gdal-python-tools python3-psycopg2 python3-PyYAML python3-pygments python3-jinja2 python3-OWSLib qca-qt5-ossl qwt-qt5-devel qtkeychain-qt5-devel libzip-devel exiv2-devel  PyQt-builder protobuf-lite protobuf-lite-devel libzstd-devel qt5-qtserialport-devel draco-devel python3-devel fcgi-devel ninja-build wget jq
      - name: Configure QGIS
        run: |
          cmake . \
            -GNinja \
            -DCMAKE_BUILD_TYPE=Debug \
            -DENABLE_TESTS=TRUE \
            -DWITH_SERVER=TRUE
      - name: Download Coverity Build Tool
        run: |
          wget -q https://scan.coverity.com/download/linux64 --post-data "token=$TOKEN&project=qgis%2FQGIS" -O cov-analysis-linux64.tar.gz
          mkdir cov-analysis-linux64
          tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
      - name: Build with cov-build
        run: |
          pwd
          export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
          cov-build --dir cov-int ninja
      - name: Submit to Coverity Scan
        run: |
          tar czvf qgis.tgz cov-int
          curl -X POST \
            -d version="master" \
            -d description="`git rev-parse --abbrev-ref HEAD` `git rev-parse --short HEAD`" \
            -d email=nyall.dawson@gmail.com \
            -d token=$TOKEN \
            -d file_name="qgis.tgz" \
            https://scan.coverity.com/projects/4126/builds/init \
            | tee response
          upload_url=$(jq -r '.url' response)
          build_id=$(jq -r '.build_id' response)
          curl -X PUT \
            --header 'Content-Type: application/json' \
            --upload-file qgis.tgz \
            $upload_url
          curl -X PUT \
            -d token=$TOKEN \
            https://scan.coverity.com/projects/4126/builds/$build_id/enqueue
        env:
          TOKEN: ${{ secrets.COVERITY_SCAN_TOKEN }}
