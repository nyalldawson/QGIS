/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgslinedisplacementrenderer.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/


class QgsLineDisplacementRenderer : QgsFeatureRenderer
{
%Docstring(signature="appended")
:py:class:`QgsLineDisplacementRenderer` is a line-only feature renderer used to
render overlapping line features in a displaced manner.

It is designed on top of another feature renderer, which is called "embedded"
Most of the methods are then only proxies to the embedded renderer.

.. versionadded:: 3.36
%End

%TypeHeaderCode
#include "qgslinedisplacementrenderer.h"
%End
  public:

    QgsLineDisplacementRenderer( QgsFeatureRenderer *embeddedRenderer /Transfer/ );
%Docstring
Constructor for QgsLineDisplacementRenderer.

:param embeddedRenderer: optional embeddedRenderer. Ownership will be transferred.
%End


    static QgsFeatureRenderer *create( QDomElement &element, const QgsReadWriteContext &context ) /Factory/;
%Docstring
Creates a renderer out of an XML, for loading
%End

    virtual QgsLineDisplacementRenderer *clone() const /Factory/;

    virtual void startRender( QgsRenderContext &context, const QgsFields &fields );


    virtual bool renderFeature( const QgsFeature &feature, QgsRenderContext &context, int layer = -1, bool selected = false, bool drawVertexMarker = false ) throw( QgsCsException );

    virtual void stopRender( QgsRenderContext &context );


    virtual QString dump() const;

    virtual QSet<QString> usedAttributes( const QgsRenderContext &context ) const;

    virtual bool filterNeedsGeometry() const;

    virtual QgsFeatureRenderer::Capabilities capabilities();

    virtual QgsSymbolList symbols( QgsRenderContext &context ) const;

    virtual QgsSymbol *symbolForFeature( const QgsFeature &feature, QgsRenderContext &context ) const;

    virtual QgsSymbol *originalSymbolForFeature( const QgsFeature &feature, QgsRenderContext &context ) const;

    virtual QgsSymbolList symbolsForFeature( const QgsFeature &feature, QgsRenderContext &context ) const;

    virtual QgsSymbolList originalSymbolsForFeature( const QgsFeature &feature, QgsRenderContext &context ) const;

    virtual QSet< QString > legendKeysForFeature( const QgsFeature &feature, QgsRenderContext &context ) const;

    virtual QString legendKeyToExpression( const QString &key, QgsVectorLayer *layer, bool &ok ) const;

    virtual QgsLegendSymbolList legendSymbolItems() const;

    virtual bool willRenderFeature( const QgsFeature &feature, QgsRenderContext &context ) const;

    virtual QDomElement save( QDomDocument &doc, const QgsReadWriteContext &context );

    virtual void setEmbeddedRenderer( QgsFeatureRenderer *subRenderer /Transfer/ );

    virtual const QgsFeatureRenderer *embeddedRenderer() const;

    virtual void setLegendSymbolItem( const QString &key, QgsSymbol *symbol );

    virtual bool legendSymbolItemsCheckable() const;

    virtual bool legendSymbolItemChecked( const QString &key );

    virtual void checkLegendSymbolItem( const QString &key, bool state = true );

    virtual bool accept( QgsStyleEntityVisitorInterface *visitor ) const;


    static QgsLineDisplacementRenderer *convertFromRenderer( const QgsFeatureRenderer *renderer ) /Factory/;
%Docstring
Creates a QgsLineDisplacementRenderer by a conversion from an existing renderer.

:return: a new renderer if the conversion was possible, otherwise ``None``.
%End

  protected:

    QgsLineDisplacementRenderer( const QString &type, QgsFeatureRenderer *embeddedRenderer /Transfer/ );
%Docstring
Constructor for QgsLineDisplacementRenderer.

:param type: renderer ID string
:param embeddedRenderer: optional embeddedRenderer. Ownership will be transferred.
%End


};


/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/symbology/qgslinedisplacementrenderer.h                     *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.pl again   *
 ************************************************************************/
