/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgssiputils.h                                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/



class QgsSipUtils
{
%Docstring(signature="appended")
Contains utilities for working with SIP Python objects.

.. versionadded:: 3.44
%End

%TypeHeaderCode
#include "qgssiputils.h"
%End
  public:

    static bool isPyOwned( SIP_PYOBJECT /GetWrapper/ );
%Docstring
Returns ``True`` if an object is currently owned by Python.

If ``False`` is returned, then the object is currently owned by another
object (e.g. a c++ class).

.. seealso:: :py:func:`verifyIsPyOwned`
%End
%MethodCode
    if ( sipIsOwnedByPython( ( sipSimpleWrapper * )a0Wrapper ) )
    {
      sipRes = true;
    }
    else
    {
      sipRes = false;
    }
%End

    static void verifyIsPyOwned( SIP_PYOBJECT /GetWrapper/, const QString &message );
%Docstring
Checks that an object is currently owned by Python.

:raises QgsOwnershipException: if object is not owned by Python.

.. seealso:: :py:func:`isPyOwned`
%End
%MethodCode
    if ( !sipIsOwnedByPython( ( sipSimpleWrapper * )a0Wrapper ) )
    {
      PyErr_SetString( sipException_QgsOwnershipException, a1->toUtf8().constData() );
      sipIsErr = 1;
    }
%End

};

/************************************************************************
 * This file has been generated automatically from                      *
 *                                                                      *
 * src/core/qgssiputils.h                                               *
 *                                                                      *
 * Do not edit manually ! Edit header and run scripts/sipify.py again   *
 ************************************************************************/
